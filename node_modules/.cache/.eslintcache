[{"/Users/fuencui/Desktop/Mini_assignment5/src/index.js":"1","/Users/fuencui/Desktop/Mini_assignment5/src/reducer/mathReducer.js":"2","/Users/fuencui/Desktop/Mini_assignment5/src/component/App.jsx":"3","/Users/fuencui/Desktop/Mini_assignment5/src/component/ParentComponent.jsx":"4","/Users/fuencui/Desktop/Mini_assignment5/src/component/Box.jsx":"5","/Users/fuencui/Desktop/worder/src/index.js":"6","/Users/fuencui/Desktop/worder/src/reducer/reducers.js":"7","/Users/fuencui/Desktop/worder/src/component/Home.jsx":"8","/Users/fuencui/Desktop/worder/src/component/GameRule.jsx":"9","/Users/fuencui/Desktop/worder/src/component/App.jsx":"10","/Users/fuencui/Desktop/worder/src/component/Keyboard.jsx":"11","/Users/fuencui/Desktop/worder/src/component/KeyBox.jsx":"12","/Users/fuencui/Desktop/worder/src/component/WordDisplayBar.jsx":"13","/Users/fuencui/Desktop/worder/src/component/AnswerBoard.jsx":"14","/Users/fuencui/Desktop/worder/src/component/AnswerBox.jsx":"15","/Users/fuencui/Desktop/worder/src/component/Reminder.jsx":"16","/Users/fuencui/Desktop/Fuen-Cui-Project2/src/index.js":"17","/Users/fuencui/Desktop/Fuen-Cui-Project2/src/reducer/reducers.js":"18","/Users/fuencui/Desktop/Fuen-Cui-Project2/src/component/App.jsx":"19","/Users/fuencui/Desktop/Fuen-Cui-Project2/src/component/GameRule.jsx":"20","/Users/fuencui/Desktop/Fuen-Cui-Project2/src/component/Home.jsx":"21","/Users/fuencui/Desktop/Fuen-Cui-Project2/src/component/WordDisplayBar.jsx":"22","/Users/fuencui/Desktop/Fuen-Cui-Project2/src/component/Reminder.jsx":"23","/Users/fuencui/Desktop/Fuen-Cui-Project2/src/component/Keyboard.jsx":"24","/Users/fuencui/Desktop/Fuen-Cui-Project2/src/component/AnswerBoard.jsx":"25","/Users/fuencui/Desktop/Fuen-Cui-Project2/src/component/KeyBox.jsx":"26","/Users/fuencui/Desktop/Fuen-Cui-Project2/src/component/AnswerBox.jsx":"27","/Users/fuencui/Desktop/Fuen-Cui-Project2/src/component/HardGame.jsx":"28","/Users/fuencui/Desktop/Fuen-Cui-Project2/src/component/MediumGame.jsx":"29"},{"size":373,"mtime":1647311417261,"results":"30","hashOfConfig":"31"},{"size":258,"mtime":1647308117200,"results":"32","hashOfConfig":"31"},{"size":295,"mtime":1646879815371,"results":"33","hashOfConfig":"31"},{"size":650,"mtime":1647328382174,"results":"34","hashOfConfig":"31"},{"size":848,"mtime":1647328382174,"results":"35","hashOfConfig":"31"},{"size":1166,"mtime":1648612808900,"results":"36","hashOfConfig":"37"},{"size":1019,"mtime":1648614022177,"results":"38","hashOfConfig":"37"},{"size":2058,"mtime":1647472450003,"results":"39","hashOfConfig":"37"},{"size":1530,"mtime":1647477000352,"results":"40","hashOfConfig":"37"},{"size":7703,"mtime":1648614345770,"results":"41","hashOfConfig":"37"},{"size":1500,"mtime":1647479648398,"results":"42","hashOfConfig":"37"},{"size":485,"mtime":1647480223446,"results":"43","hashOfConfig":"37"},{"size":271,"mtime":1647492154587,"results":"44","hashOfConfig":"37"},{"size":779,"mtime":1648509479470,"results":"45","hashOfConfig":"37"},{"size":423,"mtime":1647588127046,"results":"46","hashOfConfig":"37"},{"size":274,"mtime":1648516192261,"results":"47","hashOfConfig":"37"},{"size":1396,"mtime":1648769934893,"results":"48","hashOfConfig":"49"},{"size":2967,"mtime":1649025992722,"results":"50","hashOfConfig":"49"},{"size":7891,"mtime":1649029194578,"results":"51","hashOfConfig":"49"},{"size":2381,"mtime":1649025516495,"results":"52","hashOfConfig":"49"},{"size":2437,"mtime":1649025526717,"results":"53","hashOfConfig":"49"},{"size":312,"mtime":1649026677260,"results":"54","hashOfConfig":"49"},{"size":274,"mtime":1648516192261,"results":"55","hashOfConfig":"49"},{"size":1803,"mtime":1648771391311,"results":"56","hashOfConfig":"49"},{"size":779,"mtime":1648509479470,"results":"57","hashOfConfig":"49"},{"size":511,"mtime":1648771256191,"results":"58","hashOfConfig":"49"},{"size":423,"mtime":1647588127046,"results":"59","hashOfConfig":"49"},{"size":7957,"mtime":1649029213027,"results":"60","hashOfConfig":"49"},{"size":8004,"mtime":1649029230922,"results":"61","hashOfConfig":"49"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1eh9yk0",{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},"l6adll",{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"83"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"83"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"83"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"83"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"83"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"83"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"125"},"b5oqih",{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"133"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"133"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"125"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"125"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"133"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},"/Users/fuencui/Desktop/Mini_assignment5/src/index.js",[],[],"/Users/fuencui/Desktop/Mini_assignment5/src/reducer/mathReducer.js",[],[],"/Users/fuencui/Desktop/Mini_assignment5/src/component/App.jsx",[],[],"/Users/fuencui/Desktop/Mini_assignment5/src/component/ParentComponent.jsx",["170","171","172"],[],"import React, { useEffect, useState } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport Box from './Box';\nimport './ParentComponent.css';\n\n\nexport default function ParentComponent(){\n\n    const currentSum = useSelector((state) => {\n        return state.sum;\n    },shallowEqual);\n\n    return (\n        <div>\n            <div className='counter'>Count: {currentSum}</div>\n            <div className='container'>\n                <Box color={'white'}/>\n                <Box color={'white'}/>\n                <Box color={'white'}/>\n                <Box color={'white'}/>\n            </div>\n        </div>\n\n    )\n}\n","/Users/fuencui/Desktop/Mini_assignment5/src/component/Box.jsx",["173","174","175"],[],"import React,{useState} from 'react';\nimport './Box.css'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\n\n\nexport default function Box(props){\n\n    const [defualtColor, setDefualtColor] = useState(props.color);\n    const [number, setNumber] = useState(1);\n    const dispatch = useDispatch();\n    let className = 'box';\n    className += ' ' + defualtColor;\n\n    function changeColor(){\n        if (defualtColor === 'white'){\n            setDefualtColor('black');\n            setNumber(-1);\n        } else {\n            setDefualtColor('white')\n            setNumber(1);\n        }\n    }\n\n    function handleOnClick(){\n        dispatch({\n            type:'ADD',\n            value: number,\n        })\n    }\n\n    return (\n        <div className={className} onClick={() => (changeColor(),handleOnClick())}>\n        </div>  \n    )\n\n}","/Users/fuencui/Desktop/worder/src/index.js",["176"],[],"import React, { useState } from 'react';\nimport ReactDom from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport App from './component/App'\nimport combineReducers from './reducer/reducers'\nimport GameRule from \"./component/GameRule\";\nimport Home from \"./component/Home\";\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst persistedState = localStorage.getItem('reduxState') \n                       ? JSON.parse(localStorage.getItem('reduxState'))\n                       : {}\n\nconst store = createStore(\n    combineReducers, \n    persistedState,\n)\n\nstore.subscribe(()=>{\n    localStorage.setItem('reduxState', JSON.stringify(store.getState()))\n})\n\nReactDom.render(\n<Provider store={store}>\n    <Router>\n        <Routes>\n            <Route exact path='/' element={<Home/>} />\n            <Route exact path='/home' element={<Home/>} />\n            <Route exact path='/gameRule' element={<GameRule/>} />\n            <Route exact path='/app' element={<App/>} />\n        </Routes>\n    </Router>\n    </Provider>,\ndocument.getElementById('root')\n);\n",["177","178"],"/Users/fuencui/Desktop/worder/src/reducer/reducers.js",[],[],"/Users/fuencui/Desktop/worder/src/component/Home.jsx",["179","180"],[],"import React from \"react\";\nimport {Link, NavLink} from \"react-router-dom\";\nimport { Navbar, Container, NavDropdown, Nav, Dropdown} from \"react-bootstrap\";\nimport './Home.css'\n\nexport default function Home (){\n\n\n        return (\n            <div>\n                <div className=\"navbar\">\n                    <Navbar bg=\"light\" expand=\"lg\">\n                    <Container>\n                        <Navbar.Brand href=\"/home\">Wordle !!!</Navbar.Brand>\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"me-auto\">\n                            <Nav.Link href=\"/home\">Home</Nav.Link>\n                            <Nav.Link href=\"/gameRule\">Game Rules</Nav.Link>\n                            <Dropdown>\n                                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                                Games\n                                </Dropdown.Toggle>\n\n                                <Dropdown.Menu>\n                                <Dropdown.Item href=\"/app\">easy game</Dropdown.Item>\n                                <Dropdown.Item href=\"/app\">medium game</Dropdown.Item>\n                                <Dropdown.Item href=\"/app\">hard game</Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Nav>\n                        </Navbar.Collapse>\n                    </Container>\n                    </Navbar>\n                </div>\n\n                <div className='welcome'>\n                    <h1>Wordle!</h1>\n                    <h3>Project 2 Fuen Cui</h3>\n                </div>\n                <div className=\"nav\">\n                    <div>\n                        <Link className='link' to=\"/gameRule\">Game Rules</Link>\n                    </div>\n                    <div>\n                        <Link className='link' to={\"/app\"}>Easy Game</Link>\n                    </div>\n                </div>\n            </div>\n        );\n}\n","/Users/fuencui/Desktop/worder/src/component/GameRule.jsx",["181"],[],"import React from \"react\";\nimport './GameRule.css';\nimport { Navbar, Container, NavDropdown, Nav, Dropdown} from \"react-bootstrap\";\n\nexport default function GameRule() {\n\n    \n    return (\n        <div>\n            <div className=\"navbar\">\n                <Navbar bg=\"light\" expand=\"lg\">\n                <Container>\n                    <Navbar.Brand href=\"/home\">Wordle !!!</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"me-auto\">\n                        <Nav.Link href=\"/home\">Home</Nav.Link>\n                        <Nav.Link href=\"/gameRule\">Game Rules</Nav.Link>\n                        <Dropdown>\n                            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                            Games\n                            </Dropdown.Toggle>\n\n                            <Dropdown.Menu>\n                            <Dropdown.Item href=\"/app\">easy game</Dropdown.Item>\n                            <Dropdown.Item href=\"/app\">medium game</Dropdown.Item>\n                            <Dropdown.Item href=\"/app\">hard game</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </Nav>\n                    </Navbar.Collapse>\n                </Container>\n                </Navbar>\n            </div>\n\n            <div className='welcome'>\n                <h1>game ruyle</h1>\n            </div>\n        </div>\n    )\n}\n","/Users/fuencui/Desktop/worder/src/component/App.jsx",["182","183"],[],"import React, {useState, useEffect} from 'react';\nimport './App.css'\nimport Keyboard from './Keyboard';\nimport { Navbar, Container, NavDropdown, Nav, Dropdown, Button} from \"react-bootstrap\";\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport WordDisplayBar from './WordDisplayBar';\nimport Reminder from './Reminder';\nimport AnswerBoard from './AnswerBoard';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nexport default function App() {\n    const[words, setWords] = useState([]);\n    const[solutionBoard, setsolutionBoard] = useState([]);\n    const[picked, setPicked] = useState('');\n    const[isWordInList, setIsWordInList] = useState(true);\n    const dispatch = useDispatch();\n\n\n    const currentWord = useSelector((state) => {\n        return state.curr;\n    },shallowEqual);\n\n    const fiveLetter = useSelector((state) => {\n        return state.five;\n    },shallowEqual);\n\n    const wordsList = useSelector((state) => {\n        return state.list;\n    },shallowEqual);\n\n    const globPicked = useSelector((state) => {\n        return state.pick;\n    },shallowEqual);\n\n    useEffect(() => {\n        let w = fiveLetter[Math.floor(Math.random() * fiveLetter.length)]\n        if (wordsList.length !== 0) {\n            setPicked(globPicked);\n        } else {\n            setPicked(w);\n            dispatch({\n                type: 'CHANGE',\n                value: w ? w : '',\n            })\n        }\n\n        for (let i = 0; i < 7; i++){\n            if (solutionBoard.length >= 7) break;\n            let array = []\n            for (let j = 0; j < 5 ; j++){\n                array.push({\n                    char:' ',\n                    color:'white',\n                    })\n            }\n            solutionBoard.push(array)\n            setsolutionBoard([...solutionBoard])\n        }\n    }\n    ,[fiveLetter])\n\n\n\n    function handAnswer(word){\n        const array = [];\n        console.log(picked)\n        for (let i = 0; i < word.length; i++){\n            for (let j = i; j < word.length; j++){\n                if ((word[i] === picked[j]) && (i === j)){\n                    array.push({\n                        char:word[i],\n                        color:'green',\n                    })\n                    break;\n                } else if (word[i] === picked[j]){\n                    array.push({\n                        char:word[i],\n                        color:'yellow',\n                    })\n                    break;\n                }\n                if  (j === word.length - 1){\n                    array.push({\n                        char:word[i],\n                        color:'gray',\n                    })\n                    break;\n                }\n            }\n        }\n        \n        dispatch({\n            type: 'LIST',\n            value: array,\n        })\n\n    }\n\n\n    function loaddingFive() {\n        fetch('data.txt', {mode: 'no-cors'})\n        .then(response => response.text())\n        .then(data =>{\n                let array =  data.trim().split(\"\\n\")\n                dispatch({\n                    type: 'FIVE',\n                    value: array,\n                })\n            }\n        )\n        .catch(error => console.error(error));\n    }\n\n    function handSubmit(){\n        if (isWordinList(currentWord)){\n            words.push(currentWord)\n            setWords([...words],checkResult(currentWord)) \n            handAnswer(currentWord);\n        } else {\n            setIsWordInList(false);\n            setTimeout(() => { setIsWordInList(true);}, 2000)\n        }\n\n        dispatch(\n            {\n                type:'RESET',\n                value: '',\n            }\n        )\n    }\n\n\n    function handDelete(){\n        if (currentWord.length >= 0){\n            dispatch(\n                {\n                    type:'DEL',\n                    value: currentWord.substring(0, currentWord.length-1),\n                } \n            )\n        }\n    }\n\n    function isWordinList(word) {\n        if (word === '') return false;\n        for (let i = 0; i < fiveLetter.length; i++){\n            if (fiveLetter[i] === word){\n                return true;\n            }\n        }\n        return false;       \n    }\n\n    function handReset(){\n        setWords([]);\n        setsolutionBoard([]);\n        setPicked('');\n\n        dispatch(\n            {\n                type:'RESET',\n                value: '',\n            }\n        )\n        dispatch(\n            {\n                type:'ResetList',\n                value: '',\n            }\n        )\n        dispatch(\n            {\n                type:'ResetWord',\n                value: '',\n            }\n        )\n    }\n\n    function checkResult(word){\n        if(word === picked){\n            setIsWordInList(false);\n            setTimeout(() => { setIsWordInList(true);}, 2000)\n            setTimeout(() => { handReset()}, 3000)\n        }\n        if (words.length >= 7){\n            setIsWordInList(false);\n            setTimeout(() => { setIsWordInList(true);}, 2000)\n        }\n\n\n    }\n\n\n\n\n\n\n\n\n\n\n    return (   \n        <div className='App'> \n            {loaddingFive()}\n            <div className=\"navbar\">\n                <Navbar bg=\"light\" expand=\"lg\">\n                <Container>\n                    <Navbar.Brand href=\"/home\">Wordle !!!</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"me-auto\">\n                        <Nav.Link href=\"/home\">Home</Nav.Link>\n                        <Nav.Link href=\"/gameRule\">Game Rules</Nav.Link>\n                        <Dropdown>\n                            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                            Games\n                            </Dropdown.Toggle>\n\n                            <Dropdown.Menu>\n                            <Dropdown.Item href=\"/app\">easy game</Dropdown.Item>\n                            <Dropdown.Item href=\"/app\">medium game</Dropdown.Item>\n                            <Dropdown.Item href=\"/app\">hard game</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </Nav>\n                    </Navbar.Collapse>\n                </Container>\n                </Navbar>\n            </div>\n            < WordDisplayBar name={currentWord}/>\n            < Reminder info='This is not in the List Please try again' display={isWordInList}/>\n            {console.log(solutionBoard)}\n            <div className='solutionTable'>\n                <div className='emptyBoard'>\n                    {solutionBoard.map((item) => (\n                    <AnswerBoard boardArray={item} array={null} key={uuidv4()}/>\n                    ))}\n                </div>\n                <div>\n                    {wordsList.map((item) => (\n                        <AnswerBoard boardArray={null} array={item} key={uuidv4()}/>\n                    ))}\n                </div>\n            </div>\n             \n            {console.log('picked: '+ picked)}\n            {console.log('words: '+ words)}\n            {console.log('curr: ' + currentWord)}\n            {console.log('five: ' + fiveLetter[10])}\n            {console.log('boxlist: ' + wordsList)}\n            <div className='wholeKeyboard'>\n                <Button className='DeleteButton' onClick={() => handDelete()} variant=\"success\">Delete</Button>\n                <Button className='SubmitButton' onClick={() => handSubmit()} variant=\"success\">Submit</Button>\n                <Button className='Reset' onClick={() => handReset()} variant=\"primary\">Reset</Button>\n                <Keyboard className='keyboard'/>\n            </div>\n        </div>\n    );\n}\n\n","/Users/fuencui/Desktop/worder/src/component/Keyboard.jsx",["184","185","186","187","188","189","190"],[],"import React from 'react';\nimport { Component } from 'react';\nimport './Keyboard.css';\nimport KeyBox from './KeyBox';\nimport { Navbar, Container, NavDropdown, Nav, Dropdown, Button} from \"react-bootstrap\";\n\n\n\nexport default function Keyboard() {\n    //render() {\n    return (\n        <div className='keyboard'>\n            <div className='lineOne'>\n                <KeyBox keyV={'q'} />\n                <KeyBox keyV={'w'} />\n                <KeyBox keyV={'e'} />\n                <KeyBox keyV={'r'} />\n                <KeyBox keyV={'t'} />\n                <KeyBox keyV={'y'} />\n                <KeyBox keyV={'u'} />\n                <KeyBox keyV={'i'} />\n                <KeyBox keyV={'o'} />\n                <KeyBox keyV={'p'} />\n            </div>\n\n            <div className='lineTwo'>\n                <KeyBox keyV={'a'} />\n                <KeyBox keyV={'s'} />\n                <KeyBox keyV={'d'} />\n                <KeyBox keyV={'f'} />\n                <KeyBox keyV={'g'} />\n                <KeyBox keyV={'h'} />\n                <KeyBox keyV={'j'} />\n                <KeyBox keyV={'k'} />\n                <KeyBox keyV={'l'} />\n            </div>\n\n            <div className='lineThree'>  \n                <KeyBox keyV={'z'} />\n                <KeyBox keyV={'x'} />\n                <KeyBox keyV={'c'} />\n                <KeyBox keyV={'v'} />\n                <KeyBox keyV={'b'} />\n                <KeyBox keyV={'n'} />\n                <KeyBox keyV={'m'} />\n            </div>\n        </div>\n    );\n}\n","/Users/fuencui/Desktop/worder/src/component/KeyBox.jsx",["191"],[],"import React,{useState} from 'react';\nimport './KeyBox.css';\nimport { useDispatch } from 'react-redux';\n\n\nexport default function KeyBox(props){\n\n    let keyValue = props.keyV.toUpperCase();\n    const dispatch = useDispatch();\n\n    function handOnClick() {\n        dispatch(\n            {\n                type:'ADD',\n                value: props.keyV,\n            }\n        )\n    }\n\n    return (\n        <div className='KeyBox' onClick={() => handOnClick()}>{keyValue}</div>  \n    )\n\n}","/Users/fuencui/Desktop/worder/src/component/WordDisplayBar.jsx",[],[],"/Users/fuencui/Desktop/worder/src/component/AnswerBoard.jsx",["192","193"],[],"import React,{useState} from 'react';\nimport AnswerBox from './AnswerBox';\nimport './AnswerBoard.css'\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default function AnswerBoard(props) {\n\n    const [wordList, setWordList] = useState(props.array)\n    const [boardArray,setBoardArray] = useState(props.boardArray)\n\n\n    function output(){\n        if (wordList !== null){\n            return wordList.map((item) => (\n                <AnswerBox keyV={item.char} color={item.color} key={uuidv4()}/>\n            ))\n        } else {\n            return boardArray.map((item) => (\n                <AnswerBox keyV={item.char} color={item.color} key={uuidv4()}/>\n            ))\n        }\n    }\n\n    return (\n        <div className='AnswerBoard'>\n            {output()}\n        </div>\n    );\n}\n","/Users/fuencui/Desktop/worder/src/component/AnswerBox.jsx",["194","195"],[],"import React,{useState} from 'react';\nimport './AnswerBox.css'\n\n\nexport default function AnswerBox(props){\n\n    const [color, setColor] = useState(props.color)\n    \n    let className = 'AnswerBox' + ' ' + color; \n    let keyValue;\n     \n    if (!props.keyV){\n        keyValue = '';\n    } else {\n        keyValue = props.keyV.toLowerCase();\n    }\n\n    return (\n        <div className={className}>{keyValue}</div>  \n    )\n\n}\n","/Users/fuencui/Desktop/worder/src/component/Reminder.jsx",[],[],"/Users/fuencui/Desktop/Fuen-Cui-Project2/src/index.js",["196"],[],"import React, { useState } from 'react';\nimport ReactDom from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport App from './component/App'\nimport MediumGame from './component/MediumGame'\nimport HardGame from './component/HardGame'\nimport combineReducers from './reducer/reducers'\nimport GameRule from \"./component/GameRule\";\nimport Home from \"./component/Home\";\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst persistedState = localStorage.getItem('reduxState') \n                       ? JSON.parse(localStorage.getItem('reduxState'))\n                       : {}\n\nconst store = createStore(\n    combineReducers, \n    persistedState,\n)\n\nstore.subscribe(()=>{\n    localStorage.setItem('reduxState', JSON.stringify(store.getState()))\n})\n\nReactDom.render(\n<Provider store={store}>\n    <Router>\n        <Routes>\n            <Route exact path='/' element={<Home/>} />\n            <Route exact path='/home' element={<Home/>} />\n            <Route exact path='/gameRule' element={<GameRule/>} />\n            <Route exact path='/app' element={<App/>} />\n            <Route exact path='/mediumGame' element={<MediumGame/>} />\n            <Route exact path='/hardGame' element={<HardGame/>} />\n        </Routes>\n    </Router>\n    </Provider>,\ndocument.getElementById('root')\n);\n",["197","198"],"/Users/fuencui/Desktop/Fuen-Cui-Project2/src/reducer/reducers.js",[],[],"/Users/fuencui/Desktop/Fuen-Cui-Project2/src/component/App.jsx",["199"],[],"import React, {useState, useEffect} from 'react';\nimport './App.css'\nimport Keyboard from './Keyboard';\nimport { Navbar, Container, Nav, Dropdown, Button} from \"react-bootstrap\";\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport WordDisplayBar from './WordDisplayBar';\nimport Reminder from './Reminder';\nimport AnswerBoard from './AnswerBoard';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nexport default function App() {\n    const[words, setWords] = useState([]);\n    const[solutionBoard, setsolutionBoard] = useState([]);\n    const[picked, setPicked] = useState('');\n    const[isReminderNotDisplay, setIsReminderNotDisplay] = useState(true);\n    const[info, SetInfo] = useState('');\n    const dispatch = useDispatch();\n\n\n    const currentWord = useSelector((state) => {\n        return state.curr;\n    },shallowEqual);\n\n    const fiveLetter = useSelector((state) => {\n        return state.five;\n    },shallowEqual);\n\n    const wordsList = useSelector((state) => {\n        return state.list;\n    },shallowEqual);\n\n    const globPicked = useSelector((state) => {\n        return state.pick;\n    },shallowEqual);\n\n    useEffect(() => {\n        let w = fiveLetter[Math.floor(Math.random() * fiveLetter.length)]\n        if (wordsList.length !== 0) {\n            setPicked(globPicked);\n        } else {\n            setPicked(w);\n            dispatch({\n                type: 'CHANGE',\n                value: w ? w : '',\n            })\n        }\n\n        for (let i = 0; i < 7; i++){\n            if (solutionBoard.length >= 7) break;\n            let array = []\n            for (let j = 0; j < 5 ; j++){\n                array.push({\n                    char:' ',\n                    color:'white',\n                    })\n            }\n            solutionBoard.push(array)\n            setsolutionBoard([...solutionBoard])\n        }\n    }\n    ,[fiveLetter])\n\n\n\n    function handAnswer(word){\n        const array = [];\n        for (let i = 0; i < word.length; i++){\n            for (let j = i; j < word.length; j++){\n                if ((word[i] === picked[j]) && (i === j)){\n                    array.push({\n                        char:word[i],\n                        color:'green',\n                    })\n                    break;\n                } else if (word[i] === picked[j]){\n                    array.push({\n                        char:word[i],\n                        color:'yellow',\n                    })\n                    break;\n                }\n                if  (j === word.length - 1){\n                    array.push({\n                        char:word[i],\n                        color:'gray',\n                    })\n                    break;\n                }\n            }\n        }\n        \n        dispatch({\n            type: 'LIST',\n            value: array,\n        })\n\n    }\n\n\n    function loaddingFive() {\n        fetch('data.txt', {mode: 'no-cors'})\n        .then(response => response.text())\n        .then(data =>{\n                let array =  data.trim().split(\"\\n\");\n                const arrLower = array.map(element => {\n                    return element.toLowerCase();\n                });\n                dispatch({\n                    type: 'FIVE',\n                    value: arrLower,\n                })\n            }\n        )\n        .catch(error => console.error(error));\n    }\n\n    function handSubmit(){\n        if (isWordinList(currentWord)){\n            words.push(currentWord)\n            setWords([...words],checkResult(currentWord)) \n            handAnswer(currentWord);\n        }\n\n        dispatch(\n            {\n                type:'RESET',\n                value: '',\n            }\n        )\n    }\n\n\n    function handDelete(){\n        if (currentWord.length >= 0){\n            dispatch(\n                {\n                    type:'DEL',\n                    value: currentWord.substring(0, currentWord.length-1),\n                } \n            )\n        }\n    }\n\n    function isWordinList(word) {\n        if (word === '') return false;\n        for (let i = 0; i < fiveLetter.length; i++){\n            if (fiveLetter[i] === word){\n                return true;\n            }\n        }\n        SetInfo('Not in word list. Please try again')\n        setIsReminderNotDisplay(false);\n        setTimeout(() => { setIsReminderNotDisplay(true);}, 2000)\n        return false;       \n    }\n\n    function handReset(){\n        setWords([]);\n        setsolutionBoard([]);\n        setPicked('');\n\n        dispatch(\n            {\n                type:'RESET',\n                value: '',\n            }\n        )\n        dispatch(\n            {\n                type:'ResetList',\n                value: '',\n            }\n        )\n        dispatch(\n            {\n                type:'ResetWord',\n                value: '',\n            }\n        )\n    }\n\n    function checkResult(word){\n        if(word === picked){\n            SetInfo('Congratulations! The Word is ' + picked);\n            setIsReminderNotDisplay(false);\n            setTimeout(() => { setIsReminderNotDisplay(true);}, 2000)\n            setTimeout(() => { handReset()}, 3000)\n            return;\n        }\n        if (words.length >= 7){\n            SetInfo('Game Over! The Word is ' + picked);\n            setIsReminderNotDisplay(false);\n            setTimeout(() => { setIsReminderNotDisplay(true);}, 2000)\n            setTimeout(() => { handReset()}, 3000)\n            return;\n        }\n    }\n\n    return (   \n        <div className='App'> \n            {loaddingFive()}\n            <div className=\"navbar\">\n                <Navbar bg=\"light\" expand=\"lg\">\n                <Container className='container'>\n                    <Navbar.Brand href=\"/home\">Fuen Cui Project 2 - Wordle</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"me-auto\">\n                        <Nav.Link href=\"/home\">Home</Nav.Link>\n                        <Nav.Link href=\"/gameRule\">Game Rules</Nav.Link>\n                        <Dropdown>\n                            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                            Games\n                            </Dropdown.Toggle>\n\n                            <Dropdown.Menu>\n                            <Dropdown.Item href=\"/app\">easy game</Dropdown.Item>\n                            <Dropdown.Item href=\"/mediumGame\">medium game</Dropdown.Item>\n                            <Dropdown.Item href=\"/hardGame\">hard game</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </Nav>\n                    </Navbar.Collapse>\n                </Container>\n                </Navbar>\n            </div>\n\n            < WordDisplayBar name={currentWord} level={'easy'}/>\n            < Reminder info={info} display={isReminderNotDisplay}/>\n            \n            <div className='solutionTable'>\n                <div className='emptyBoard'>\n                    {solutionBoard.map((item) => (\n                    <AnswerBoard boardArray={item} array={null} key={uuidv4()}/>\n                    ))}\n                </div>\n                <div>\n                    {wordsList.map((item) => (\n                        <AnswerBoard boardArray={null} array={item} key={uuidv4()}/>\n                    ))}\n                </div>\n            </div>\n\n            <div className='wholeKeyboard'>\n                <Button className='DeleteButton' onClick={() => handDelete()} variant=\"success\">Delete</Button>\n                <Button className='SubmitButton' onClick={() => handSubmit()} variant=\"success\">Submit</Button>\n                <Button className='Reset' onClick={() => handReset()} variant=\"primary\">Reset</Button>\n                <Keyboard className='keyboard' type='ADD'/>\n            </div>\n        </div>\n    );\n}\n\n",["200","201"],"/Users/fuencui/Desktop/Fuen-Cui-Project2/src/component/GameRule.jsx",["202"],[],"import React from \"react\";\nimport './GameRule.css';\nimport { Navbar, Container, Nav, Dropdown} from \"react-bootstrap\";\n\nexport default function GameRule() {\n\n    return (\n        <div>\n            <div className=\"navbar\">\n                <Navbar bg=\"light\" expand=\"lg\">\n                <Container>\n                    <Navbar.Brand href=\"/home\">Fuen Cui Project 2 - Wordle</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"me-auto\">\n                        <Nav.Link href=\"/home\">Home</Nav.Link>\n                        <Nav.Link href=\"/gameRule\">Game Rules </Nav.Link>\n                        <Dropdown>\n                            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                            Games\n                            </Dropdown.Toggle>\n\n                            <Dropdown.Menu>\n                            <Dropdown.Item href=\"/app\">easy game</Dropdown.Item>\n                            <Dropdown.Item href=\"/mediumGame\">medium game</Dropdown.Item>\n                            <Dropdown.Item href=\"/hardGame\">hard game</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </Nav>\n                    </Navbar.Collapse>\n                </Container>\n                </Navbar>\n            </div>\n\n            <div className='rule'>\n                <h3>How to play</h3>\n                <h5>\n                    Easy Game:\n                </h5>\n                <span>Guess the WORDLE in seven tries. Each guess must be a valid five-letter word.</span>\n                <h5>\n                    Medium Game:\n                </h5>\n                <span>Guess the WORDLE in six tries. Each guess must be a valid six-letter word.</span>\n                <h5>\n                    Hard Game:\n                </h5>\n                <span>Guess the WORDLE in five tries. Each guess must be a valid seven-letter word.</span>\n                <img src={'./rule.png'} className='img'></img>\n                <span> Hit the enter button to submit.</span>\n                <span>After each guess,</span>\n                <span>the color of the tiles will change to show how close your guess was to the word.</span>\n                \n            </div>\n        </div>\n    )\n}\n","/Users/fuencui/Desktop/Fuen-Cui-Project2/src/component/Home.jsx",["203"],[],"import React from \"react\";\nimport {Link, NavLink} from \"react-router-dom\";\nimport { Navbar, Container, Nav, Dropdown} from \"react-bootstrap\";\nimport './Home.css'\n\nexport default function Home (){\n\n\n        return (\n            <div>\n                <div className=\"navbar\">\n                    <Navbar bg=\"light\" expand=\"lg\">\n                    <Container>\n                        <Navbar.Brand href=\"/home\">Fuen Cui Project 2 - Wordle</Navbar.Brand>\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"me-auto\">\n                            <Nav.Link href=\"/home\">Home</Nav.Link>\n                            <Nav.Link href=\"/gameRule\">Game Rules</Nav.Link>\n                            <Dropdown>\n                                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                                Games\n                                </Dropdown.Toggle>\n\n                                <Dropdown.Menu>\n                                <Dropdown.Item href=\"/app\">easy game</Dropdown.Item>\n                                <Dropdown.Item href=\"/mediumGame\">medium game</Dropdown.Item>\n                                <Dropdown.Item href=\"/hardGame\">hard game</Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Nav>\n                        </Navbar.Collapse>\n                    </Container>\n                    </Navbar>\n                </div>\n\n                <div className='welcome'>\n                    <h1>Wordle!</h1>\n                    <h3>Project 2 Fuen Cui</h3>\n                </div>\n                <div className=\"nav\">\n                    <div>\n                        <Link className='link' to=\"/gameRule\">Game Rules</Link>\n                    </div>\n                    <div className=\"game\">\n                        <div>\n                            <Link className='link' to={\"/app\"}>Easy</Link>\n                        </div>\n                        <div>\n                            <Link className='link' to={\"/mediumGame\"}>Medium</Link>\n                        </div>\n                        <div>\n                            <Link className='link' to={\"/hardGame\"}>Hard</Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n}\n","/Users/fuencui/Desktop/Fuen-Cui-Project2/src/component/WordDisplayBar.jsx",[],[],"/Users/fuencui/Desktop/Fuen-Cui-Project2/src/component/Reminder.jsx",[],[],"/Users/fuencui/Desktop/Fuen-Cui-Project2/src/component/Keyboard.jsx",["204","205","206","207","208","209","210"],[],"import React from 'react';\nimport { Component } from 'react';\nimport './Keyboard.css';\nimport KeyBox from './KeyBox';\nimport { Navbar, Container, NavDropdown, Nav, Dropdown, Button} from \"react-bootstrap\";\n\n\n\nexport default function Keyboard(props) {\n\n    let type = props.type;\n\n    return (\n        <div className='keyboard'>\n            <div className='lineOne'>\n                <KeyBox keyV={'q'} type={type}/>\n                <KeyBox keyV={'w'} type={type}/>\n                <KeyBox keyV={'e'} type={type}/>\n                <KeyBox keyV={'r'} type={type}/>\n                <KeyBox keyV={'t'} type={type}/>\n                <KeyBox keyV={'y'} type={type}/>\n                <KeyBox keyV={'u'} type={type}/>\n                <KeyBox keyV={'i'} type={type}/>\n                <KeyBox keyV={'o'} type={type}/>\n                <KeyBox keyV={'p'} type={type}/>\n            </div>\n\n            <div className='lineTwo'>\n                <KeyBox keyV={'a'} type={type}/>\n                <KeyBox keyV={'s'} type={type}/>\n                <KeyBox keyV={'d'} type={type}/>\n                <KeyBox keyV={'f'} type={type}/>\n                <KeyBox keyV={'g'} type={type}/>\n                <KeyBox keyV={'h'} type={type}/>\n                <KeyBox keyV={'j'} type={type}/>\n                <KeyBox keyV={'k'} type={type}/>\n                <KeyBox keyV={'l'} type={type}/>\n            </div>\n\n            <div className='lineThree'>  \n                <KeyBox keyV={'z'} type={type}/>\n                <KeyBox keyV={'x'} type={type}/>\n                <KeyBox keyV={'c'} type={type}/>\n                <KeyBox keyV={'v'} type={type}/>\n                <KeyBox keyV={'b'} type={type}/>\n                <KeyBox keyV={'n'} type={type}/>\n                <KeyBox keyV={'m'} type={type}/>\n            </div>\n        </div>\n    );\n}\n","/Users/fuencui/Desktop/Fuen-Cui-Project2/src/component/AnswerBoard.jsx",["211","212"],[],"/Users/fuencui/Desktop/Fuen-Cui-Project2/src/component/KeyBox.jsx",["213"],[],"import React,{useState} from 'react';\nimport './KeyBox.css';\nimport { useDispatch } from 'react-redux';\n\n\nexport default function KeyBox(props){\n\n    let keyValue = props.keyV.toUpperCase();\n    let type = props.type;\n    const dispatch = useDispatch();\n\n    function handOnClick() {\n        dispatch(\n            {\n                type:type,\n                value: props.keyV,\n            }\n        )\n    }\n\n    return (\n        <div className='KeyBox' onClick={() => handOnClick()}>{keyValue}</div>  \n    )\n\n}","/Users/fuencui/Desktop/Fuen-Cui-Project2/src/component/AnswerBox.jsx",["214","215"],[],"/Users/fuencui/Desktop/Fuen-Cui-Project2/src/component/HardGame.jsx",["216"],[],"import React, {useState, useEffect} from 'react';\nimport './App.css'\nimport Keyboard from './Keyboard';\nimport { Navbar, Container, Nav, Dropdown, Button} from \"react-bootstrap\";\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport WordDisplayBar from './WordDisplayBar';\nimport Reminder from './Reminder';\nimport AnswerBoard from './AnswerBoard';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nexport default function HardGame() {\n    const[words, setWords] = useState([]);\n    const[solutionBoard, setsolutionBoard] = useState([]);\n    const[picked, setPicked] = useState('');\n    const[isReminderNotDisplay, setIsReminderNotDisplay] = useState(true);\n    const[info, SetInfo] = useState('');\n    const dispatch = useDispatch();\n\n\n    const currentHardWord = useSelector((state) => {\n        return state.currHD;\n    },shallowEqual);\n\n    const hardLetter = useSelector((state) => {\n        return state.seven;\n    },shallowEqual);\n\n    const hardWordsList = useSelector((state) => {\n        return state.listHD;\n    },shallowEqual);\n\n    const hardGlobPicked = useSelector((state) => {\n        return state.pickHD;\n    },shallowEqual);\n\n    useEffect(() => {\n        let w = hardLetter[Math.floor(Math.random() * hardLetter.length)]\n        if (hardWordsList.length !== 0) {\n            setPicked(hardGlobPicked);\n        } else {\n            setPicked(w);\n            dispatch({\n                type: 'CHANGEHD',\n                value: w ? w : '',\n            })\n        }\n\n        for (let i = 0; i < 5; i++){\n            if (solutionBoard.length >= 5) break;\n            let array = []\n            for (let j = 0; j < 7 ; j++){\n                array.push({\n                    char:' ',\n                    color:'white',\n                    })\n            }\n            solutionBoard.push(array)\n            setsolutionBoard([...solutionBoard])\n        }\n    }\n    ,[hardLetter])\n\n\n\n    function handAnswer(word){\n        const array = [];\n        for (let i = 0; i < word.length; i++){\n            for (let j = i; j < word.length; j++){\n                if ((word[i] === picked[j]) && (i === j)){\n                    array.push({\n                        char:word[i],\n                        color:'green',\n                    })\n                    break;\n                } else if (word[i] === picked[j]){\n                    array.push({\n                        char:word[i],\n                        color:'yellow',\n                    })\n                    break;\n                }\n                if  (j === word.length - 1){\n                    array.push({\n                        char:word[i],\n                        color:'gray',\n                    })\n                    break;\n                }\n            }\n        }\n        \n        dispatch({\n            type: 'LISTHD',\n            value: array,\n        })\n\n    }\n\n\n    function loaddingSeven() {\n        fetch('common-7-letter-words.txt', {mode: 'no-cors'})\n        .then(response => response.text())\n        .then(data =>{\n                let array =  data.trim().split('\\n')\n                const arrLower = array.map(element => {\n                    return element.toLowerCase();\n                });\n                dispatch({\n                    type: 'SEVEN',\n                    value: arrLower,\n                })\n            }\n        )\n        .catch(error => console.error(error));\n    }\n\n    function handSubmit(){\n        if (isWordinList(currentHardWord)){\n            words.push(currentHardWord)\n            setWords([...words],checkResult(currentHardWord)) \n            handAnswer(currentHardWord);\n        }\n\n        dispatch(\n            {\n                type:'RESETHD',\n                value: '',\n            }\n        )\n    }\n\n\n    function handDelete(){\n        if (currentHardWord.length >= 0){\n            dispatch(\n                {\n                    type:'DELHD',\n                    value: currentHardWord.substring(0, currentHardWord.length-1),\n                } \n            )\n        }\n    }\n\n    function isWordinList(word) {\n        if (word === '') return false;\n        for (let i = 0; i < hardLetter.length; i++){\n            if (hardLetter[i] === word){\n                return true;\n            }\n        }\n        SetInfo('Not in word list. Please try again')\n        setIsReminderNotDisplay(false);\n        setTimeout(() => { setIsReminderNotDisplay(true);}, 2000)\n        return false;       \n    }\n\n    function handReset(){\n        setWords([]);\n        setsolutionBoard([]);\n        setPicked('');\n\n        dispatch(\n            {\n                type:'RESETHD',\n                value: '',\n            }\n        )\n        dispatch(\n            {\n                type:'ResetListHD',\n                value: '',\n            }\n        )\n        dispatch(\n            {\n                type:'ResetWordHD',\n                value: '',\n            }\n        )\n    }\n\n    function checkResult(word){\n        if(word === picked){\n            SetInfo('Congratulations! The Word is ' + picked);\n            setIsReminderNotDisplay(false);\n            setTimeout(() => { setIsReminderNotDisplay(true);}, 2000)\n            setTimeout(() => { handReset()}, 3000)\n            return;\n        }\n        if (words.length >= 5){\n            SetInfo('Game Over! The Word is ' + picked);\n            setIsReminderNotDisplay(false);\n            setTimeout(() => { setIsReminderNotDisplay(true);}, 2000)\n            setTimeout(() => { handReset()}, 3000)\n            return;\n        }\n    }\n\n    return (   \n        <div className='App'> \n            {loaddingSeven()}\n            <div className=\"navbar\">\n                <Navbar bg=\"light\" expand=\"lg\">\n                <Container>\n                    <Navbar.Brand href=\"/home\">Fuen Cui Project 2 - Wordle</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"me-auto\">\n                        <Nav.Link href=\"/home\">Home</Nav.Link>\n                        <Nav.Link href=\"/gameRule\">Game Rules</Nav.Link>\n                        <Dropdown>\n                            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                            Games\n                            </Dropdown.Toggle>\n\n                            <Dropdown.Menu>\n                            <Dropdown.Item href=\"/app\">easy game</Dropdown.Item>\n                            <Dropdown.Item href=\"/mediumGame\">medium game</Dropdown.Item>\n                            <Dropdown.Item href=\"/hardGame\">hard game</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </Nav>\n                    </Navbar.Collapse>\n                </Container>\n                </Navbar>\n            </div>\n            < WordDisplayBar name={currentHardWord} level={'hard'}/>\n            < Reminder info={info} display={isReminderNotDisplay}/>\n            <div className='solutionTable'>\n                <div className='emptyBoard'>\n                    {solutionBoard.map((item) => (\n                    <AnswerBoard boardArray={item} array={null} key={uuidv4()}/>\n                    ))}\n                </div>\n                <div>\n                    {hardWordsList.map((item) => (\n                        <AnswerBoard boardArray={null} array={item} key={uuidv4()}/>\n                    ))}\n                </div>\n            </div>\n            <div className='wholeKeyboard'>\n                <Button className='DeleteButton' onClick={() => handDelete()} variant=\"success\">Delete</Button>\n                <Button className='SubmitButton' onClick={() => handSubmit()} variant=\"success\">Submit</Button>\n                <Button className='Reset' onClick={() => handReset()} variant=\"primary\">Reset</Button>\n                <Keyboard className='keyboard' type='ADDHD'/>\n            </div>\n        </div>\n    );\n}\n\n","/Users/fuencui/Desktop/Fuen-Cui-Project2/src/component/MediumGame.jsx",["217"],[],"import React, {useState, useEffect} from 'react';\nimport './App.css'\nimport Keyboard from './Keyboard';\nimport { Navbar, Container, Nav, Dropdown, Button} from \"react-bootstrap\";\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport WordDisplayBar from './WordDisplayBar';\nimport Reminder from './Reminder';\nimport AnswerBoard from './AnswerBoard';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nexport default function MediumGame() {\n    const[words, setWords] = useState([]);\n    const[solutionBoard, setsolutionBoard] = useState([]);\n    const[picked, setPicked] = useState('');\n    const[isReminderNotDisplay, setIsReminderNotDisplay] = useState(true);\n    const[info, SetInfo] = useState('');\n    const dispatch = useDispatch();\n\n\n    const currentMediumWord = useSelector((state) => {\n        return state.currMed;\n    },shallowEqual);\n\n    const mediumLetter = useSelector((state) => {\n        return state.six;\n    },shallowEqual);\n\n    const mediumWordsList = useSelector((state) => {\n        return state.listMed;\n    },shallowEqual);\n\n    const mediumGlobPicked = useSelector((state) => {\n        return state.pickMed;\n    },shallowEqual);\n\n    useEffect(() => {\n        let w = mediumLetter[Math.floor(Math.random() * mediumLetter.length)]\n        if (mediumWordsList.length !== 0) {\n            setPicked(mediumGlobPicked);\n        } else {\n            setPicked(w);\n            dispatch({\n                type: 'CHANGEMED',\n                value: w ? w : '',\n            })\n        }\n\n        for (let i = 0; i < 6; i++){\n            if (solutionBoard.length >= 6) break;\n            let array = []\n            for (let j = 0; j < 6 ; j++){\n                array.push({\n                    char:' ',\n                    color:'white',\n                    })\n            }\n            solutionBoard.push(array)\n            setsolutionBoard([...solutionBoard])\n        }\n    }\n    ,[mediumLetter])\n\n\n\n    function handAnswer(word){\n        const array = [];\n        for (let i = 0; i < word.length; i++){\n            for (let j = i; j < word.length; j++){\n                if ((word[i] === picked[j]) && (i === j)){\n                    array.push({\n                        char:word[i],\n                        color:'green',\n                    })\n                    break;\n                } else if (word[i] === picked[j]){\n                    array.push({\n                        char:word[i],\n                        color:'yellow',\n                    })\n                    break;\n                }\n                if  (j === word.length - 1){\n                    array.push({\n                        char:word[i],\n                        color:'gray',\n                    })\n                    break;\n                }\n            }\n        }\n        \n        dispatch({\n            type: 'LISTMED',\n            value: array,\n        })\n\n    }\n\n\n    function loaddingSix() {\n        fetch('6-letter.txt', {mode: 'no-cors'})\n        .then(response => response.text())\n        .then(data =>{\n                let array =  data.trim().split(\" \");\n                const arrLower = array.map(element => {\n                    return element.toLowerCase();\n                });\n                dispatch({\n                    type: 'SIX',\n                    value: arrLower,\n                })\n            }\n        )\n        .catch(error => console.error(error));\n    }\n\n    function handSubmit(){\n        if (isWordinList(currentMediumWord)){\n            words.push(currentMediumWord)\n            setWords([...words],checkResult(currentMediumWord)) \n            handAnswer(currentMediumWord);\n        }\n\n        dispatch(\n            {\n                type:'RESETMED',\n                value: '',\n            }\n        )\n    }\n\n\n    function handDelete(){\n        if (currentMediumWord.length >= 0){\n            dispatch(\n                {\n                    type:'DELMED',\n                    value: currentMediumWord.substring(0, currentMediumWord.length-1),\n                } \n            )\n        }\n    }\n\n    function isWordinList(word) {\n        if (word === '') return false;\n        for (let i = 0; i < mediumLetter.length; i++){\n            if (mediumLetter[i] === word){\n                return true;\n            }\n        }\n        SetInfo('Not in word list. Please try again')\n        setIsReminderNotDisplay(false);\n        setTimeout(() => { setIsReminderNotDisplay(true);}, 2000)\n        return false;       \n    }\n\n    function handReset(){\n        setWords([]);\n        setsolutionBoard([]);\n        setPicked('');\n\n        dispatch(\n            {\n                type:'RESETMED',\n                value: '',\n            }\n        )\n        dispatch(\n            {\n                type:'ResetListMED',\n                value: '',\n            }\n        )\n        dispatch(\n            {\n                type:'ResetWordMED',\n                value: '',\n            }\n        )\n    }\n\n    function checkResult(word){\n        if(word === picked){\n            SetInfo('Congratulations! The Word is ' + picked);\n            setIsReminderNotDisplay(false);\n            setTimeout(() => { setIsReminderNotDisplay(true);}, 2000)\n            setTimeout(() => { handReset()}, 3000)\n            return;\n        }\n        if (words.length >= 6){\n            SetInfo('Game Over! The Word is ' + picked);\n            setIsReminderNotDisplay(false);\n            setTimeout(() => { setIsReminderNotDisplay(true);}, 2000)\n            setTimeout(() => { handReset()}, 3000)\n            return;\n        }\n    }\n\n    return (   \n        <div className='App'> \n            {loaddingSix()}\n            <div className=\"navbar\">\n                <Navbar bg=\"light\" expand=\"lg\">\n                <Container>\n                    <Navbar.Brand href=\"/home\">Fuen Cui Project 2 - Wordle</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"me-auto\">\n                        <Nav.Link href=\"/home\">Home</Nav.Link>\n                        <Nav.Link href=\"/gameRule\">Game Rules</Nav.Link>\n                        <Dropdown>\n                            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                            Games\n                            </Dropdown.Toggle>\n\n                            <Dropdown.Menu>\n                            <Dropdown.Item href=\"/app\">easy game</Dropdown.Item>\n                            <Dropdown.Item href=\"/mediumGame\">medium game</Dropdown.Item>\n                            <Dropdown.Item href=\"/hardGame\">hard game</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </Nav>\n                    </Navbar.Collapse>\n                </Container>\n                </Navbar>\n            </div>\n            < WordDisplayBar name={currentMediumWord} level={'medium'}/>\n            < Reminder info={info} display={isReminderNotDisplay}/>\n            <div className='solutionTable'>\n                <div className='emptyBoard'>\n                    {solutionBoard.map((item) => (\n                    <AnswerBoard boardArray={item} array={null} key={uuidv4()}/>\n                    ))}\n                </div>\n                <div>\n                    {mediumWordsList.map((item) => (\n                        <AnswerBoard boardArray={null} array={item} key={uuidv4()}/>\n                    ))}\n                </div>\n            </div>\n            \n            <div className='wholeKeyboard'>\n                <Button className='DeleteButton' onClick={() => handDelete()} variant=\"success\">Delete</Button>\n                <Button className='SubmitButton' onClick={() => handSubmit()} variant=\"success\">Submit</Button>\n                <Button className='Reset' onClick={() => handReset()} variant=\"primary\">Reset</Button>\n                <Keyboard className='keyboard' type='ADDMED'/>\n            </div>\n        </div>\n    );\n}\n\n",{"ruleId":"218","severity":1,"message":"219","line":1,"column":17,"nodeType":"220","messageId":"221","endLine":1,"endColumn":26},{"ruleId":"218","severity":1,"message":"222","line":1,"column":28,"nodeType":"220","messageId":"221","endLine":1,"endColumn":36},{"ruleId":"218","severity":1,"message":"223","line":2,"column":24,"nodeType":"220","messageId":"221","endLine":2,"endColumn":35},{"ruleId":"218","severity":1,"message":"224","line":3,"column":10,"nodeType":"220","messageId":"221","endLine":3,"endColumn":22},{"ruleId":"218","severity":1,"message":"225","line":3,"column":37,"nodeType":"220","messageId":"221","endLine":3,"endColumn":48},{"ruleId":"226","severity":1,"message":"227","line":32,"column":65,"nodeType":"228","messageId":"229","endLine":32,"endColumn":66},{"ruleId":"218","severity":1,"message":"222","line":1,"column":17,"nodeType":"220","messageId":"221","endLine":1,"endColumn":25},{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"218","severity":1,"message":"234","line":2,"column":15,"nodeType":"220","messageId":"221","endLine":2,"endColumn":22},{"ruleId":"218","severity":1,"message":"235","line":3,"column":29,"nodeType":"220","messageId":"221","endLine":3,"endColumn":40},{"ruleId":"218","severity":1,"message":"235","line":3,"column":29,"nodeType":"220","messageId":"221","endLine":3,"endColumn":40},{"ruleId":"218","severity":1,"message":"235","line":4,"column":29,"nodeType":"220","messageId":"221","endLine":4,"endColumn":40},{"ruleId":"236","severity":1,"message":"237","line":62,"column":6,"nodeType":"238","endLine":62,"endColumn":18,"suggestions":"239"},{"ruleId":"218","severity":1,"message":"240","line":2,"column":10,"nodeType":"220","messageId":"221","endLine":2,"endColumn":19},{"ruleId":"218","severity":1,"message":"241","line":5,"column":10,"nodeType":"220","messageId":"221","endLine":5,"endColumn":16},{"ruleId":"218","severity":1,"message":"242","line":5,"column":18,"nodeType":"220","messageId":"221","endLine":5,"endColumn":27},{"ruleId":"218","severity":1,"message":"235","line":5,"column":29,"nodeType":"220","messageId":"221","endLine":5,"endColumn":40},{"ruleId":"218","severity":1,"message":"243","line":5,"column":42,"nodeType":"220","messageId":"221","endLine":5,"endColumn":45},{"ruleId":"218","severity":1,"message":"244","line":5,"column":47,"nodeType":"220","messageId":"221","endLine":5,"endColumn":55},{"ruleId":"218","severity":1,"message":"245","line":5,"column":57,"nodeType":"220","messageId":"221","endLine":5,"endColumn":63},{"ruleId":"218","severity":1,"message":"222","line":1,"column":15,"nodeType":"220","messageId":"221","endLine":1,"endColumn":23},{"ruleId":"218","severity":1,"message":"246","line":8,"column":22,"nodeType":"220","messageId":"221","endLine":8,"endColumn":33},{"ruleId":"218","severity":1,"message":"247","line":9,"column":23,"nodeType":"220","messageId":"221","endLine":9,"endColumn":36},{"ruleId":"218","severity":1,"message":"248","line":7,"column":19,"nodeType":"220","messageId":"221","endLine":7,"endColumn":27},{"ruleId":"249","severity":1,"message":"250","line":9,"column":33,"nodeType":"251","messageId":"252","endLine":9,"endColumn":34},{"ruleId":"218","severity":1,"message":"222","line":1,"column":17,"nodeType":"220","messageId":"221","endLine":1,"endColumn":25},{"ruleId":"230","replacedBy":"253"},{"ruleId":"232","replacedBy":"254"},{"ruleId":"236","severity":1,"message":"237","line":63,"column":6,"nodeType":"238","endLine":63,"endColumn":18,"suggestions":"255"},{"ruleId":"230","replacedBy":"256"},{"ruleId":"232","replacedBy":"257"},{"ruleId":"258","severity":1,"message":"259","line":49,"column":17,"nodeType":"260","endLine":49,"endColumn":57},{"ruleId":"218","severity":1,"message":"234","line":2,"column":15,"nodeType":"220","messageId":"221","endLine":2,"endColumn":22},{"ruleId":"218","severity":1,"message":"240","line":2,"column":10,"nodeType":"220","messageId":"221","endLine":2,"endColumn":19},{"ruleId":"218","severity":1,"message":"241","line":5,"column":10,"nodeType":"220","messageId":"221","endLine":5,"endColumn":16},{"ruleId":"218","severity":1,"message":"242","line":5,"column":18,"nodeType":"220","messageId":"221","endLine":5,"endColumn":27},{"ruleId":"218","severity":1,"message":"235","line":5,"column":29,"nodeType":"220","messageId":"221","endLine":5,"endColumn":40},{"ruleId":"218","severity":1,"message":"243","line":5,"column":42,"nodeType":"220","messageId":"221","endLine":5,"endColumn":45},{"ruleId":"218","severity":1,"message":"244","line":5,"column":47,"nodeType":"220","messageId":"221","endLine":5,"endColumn":55},{"ruleId":"218","severity":1,"message":"245","line":5,"column":57,"nodeType":"220","messageId":"221","endLine":5,"endColumn":63},{"ruleId":"218","severity":1,"message":"246","line":8,"column":22,"nodeType":"220","messageId":"221","endLine":8,"endColumn":33},{"ruleId":"218","severity":1,"message":"247","line":9,"column":23,"nodeType":"220","messageId":"221","endLine":9,"endColumn":36},{"ruleId":"218","severity":1,"message":"222","line":1,"column":15,"nodeType":"220","messageId":"221","endLine":1,"endColumn":23},{"ruleId":"218","severity":1,"message":"248","line":7,"column":19,"nodeType":"220","messageId":"221","endLine":7,"endColumn":27},{"ruleId":"249","severity":1,"message":"250","line":9,"column":33,"nodeType":"251","messageId":"252","endLine":9,"endColumn":34},{"ruleId":"236","severity":1,"message":"261","line":63,"column":6,"nodeType":"238","endLine":63,"endColumn":18,"suggestions":"262"},{"ruleId":"236","severity":1,"message":"263","line":63,"column":6,"nodeType":"238","endLine":63,"endColumn":20,"suggestions":"264"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useDispatch' is defined but never used.","'shallowEqual' is defined but never used.","'useSelector' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-native-reassign",["265"],"no-negated-in-lhs",["266"],"'NavLink' is defined but never used.","'NavDropdown' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'globPicked', 'solutionBoard', and 'wordsList.length'. Either include them or remove the dependency array. You can also do a functional update 'setsolutionBoard(s => ...)' if you only need 'solutionBoard' in the 'setsolutionBoard' call.","ArrayExpression",["267"],"'Component' is defined but never used.","'Navbar' is defined but never used.","'Container' is defined but never used.","'Nav' is defined but never used.","'Dropdown' is defined but never used.","'Button' is defined but never used.","'setWordList' is assigned a value but never used.","'setBoardArray' is assigned a value but never used.","'setColor' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["265"],["266"],["268"],["265"],["266"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'dispatch', 'hardGlobPicked', 'hardWordsList.length', and 'solutionBoard'. Either include them or remove the dependency array. You can also do a functional update 'setsolutionBoard(s => ...)' if you only need 'solutionBoard' in the 'setsolutionBoard' call.",["269"],"React Hook useEffect has missing dependencies: 'dispatch', 'mediumGlobPicked', 'mediumWordsList.length', and 'solutionBoard'. Either include them or remove the dependency array. You can also do a functional update 'setsolutionBoard(s => ...)' if you only need 'solutionBoard' in the 'setsolutionBoard' call.",["270"],"no-global-assign","no-unsafe-negation",{"desc":"271","fix":"272"},{"desc":"271","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},"Update the dependencies array to be: [dispatch, fiveLetter, globPicked, solutionBoard, wordsList.length]",{"range":"278","text":"279"},{"range":"280","text":"279"},"Update the dependencies array to be: [dispatch, hardGlobPicked, hardLetter, hardWordsList.length, solutionBoard]",{"range":"281","text":"282"},"Update the dependencies array to be: [dispatch, mediumGlobPicked, mediumLetter, mediumWordsList.length, solutionBoard]",{"range":"283","text":"284"},[1841,1853],"[dispatch, fiveLetter, globPicked, solutionBoard, wordsList.length]",[1885,1897],[1919,1931],"[dispatch, hardGlobPicked, hardLetter, hardWordsList.length, solutionBoard]",[1939,1953],"[dispatch, mediumGlobPicked, mediumLetter, mediumWordsList.length, solutionBoard]"]