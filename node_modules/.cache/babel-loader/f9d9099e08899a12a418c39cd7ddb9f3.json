{"ast":null,"code":"var _jsxFileName = \"/Users/fuencui/Desktop/worder/src/component/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Keyboard from './Keyboard';\nimport { Navbar, Container, NavDropdown, Nav, Dropdown, Button } from \"react-bootstrap\";\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport WordDisplayBar from './WordDisplayBar';\nimport Reminder from './Reminder';\nimport AnswerBoard from './AnswerBoard';\nimport { v4 as uuidv4 } from 'uuid'; // import cookie from 'react-cookies';\n// import axios from 'axios';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [words, setWords] = useState([]);\n  const [solutionBoard, setsolutionBoard] = useState([]);\n  const [picked, setPicked] = useState('');\n  const [isWordInList, setIsWordInList] = useState(true);\n  const dispatch = useDispatch(); // const [ip, setIp] = useState('');\n  // const getData = async () => {\n  //     const res = await axios.get('https://geolocation-db.com/json/');\n  //     setIp(res.data.IPv4);\n  // }\n\n  const currentWord = useSelector(state => {\n    return state.curr;\n  }, shallowEqual);\n  const fiveLetter = useSelector(state => {\n    return state.five;\n  }, shallowEqual);\n  const wordsList = useSelector(state => {\n    return state.list;\n  }, shallowEqual);\n  useEffect(() => {\n    const w = fiveLetter[Math.floor(Math.random() * fiveLetter.length)];\n    setPicked(w);\n\n    for (let i = 0; i < 7; i++) {\n      if (solutionBoard.length >= 7) break;\n      let array = [];\n\n      for (let j = 0; j < 5; j++) {\n        array.push({\n          char: ' ',\n          color: 'white'\n        });\n      }\n\n      solutionBoard.push(array);\n      setsolutionBoard([...solutionBoard]);\n    }\n  }, []);\n\n  function handAnswer(word) {\n    const array = [];\n    console.log(picked);\n\n    for (let i = 0; i < word.length; i++) {\n      for (let j = i; j < word.length; j++) {\n        if (word[i] === picked[j] && i === j) {\n          array.push({\n            char: word[i],\n            color: 'green'\n          });\n          break;\n        } else if (word[i] === picked[j]) {\n          array.push({\n            char: word[i],\n            color: 'yellow'\n          });\n          break;\n        }\n\n        if (j === word.length - 1) {\n          array.push({\n            char: word[i],\n            color: 'gray'\n          });\n          break;\n        }\n      }\n    }\n\n    dispatch({\n      type: 'LIST',\n      value: array\n    });\n  }\n\n  function loaddingFive() {\n    fetch('data.txt', {\n      mode: 'no-cors'\n    }).then(response => response.text()).then(data => {\n      let array = data.trim().split(\"\\n\");\n      dispatch({\n        type: 'FIVE',\n        value: array\n      });\n    }).catch(error => console.error(error));\n  }\n\n  function handSubmit() {\n    if (isWordinList(currentWord)) {\n      words.push(currentWord);\n      setWords([...words], checkResult(currentWord));\n      handAnswer(currentWord);\n    } else {\n      setIsWordInList(false);\n      setTimeout(() => {\n        setIsWordInList(true);\n      }, 2000);\n    }\n\n    dispatch({\n      type: 'RESET',\n      value: ''\n    });\n  }\n\n  function handDelete() {\n    if (currentWord.length >= 0) {\n      dispatch({\n        type: 'DEL',\n        value: currentWord.substring(0, currentWord.length - 1)\n      });\n    }\n  }\n\n  function isWordinList(word) {\n    if (word === '') return false;\n\n    for (let i = 0; i < fiveLetter.length; i++) {\n      if (fiveLetter[i] === word) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function handReset() {\n    setWords([]);\n    setsolutionBoard([]);\n    setPicked('');\n    dispatch({\n      type: 'RESET',\n      value: ''\n    });\n    dispatch({\n      type: 'ResetList',\n      value: ''\n    });\n    dispatch({\n      type: 'ResetWord',\n      value: ''\n    });\n  }\n\n  function checkResult(word) {\n    if (word === picked) {\n      setIsWordInList(false);\n      setTimeout(() => {\n        setIsWordInList(true);\n      }, 2000);\n      setTimeout(() => {\n        handReset();\n      }, 3000);\n    }\n\n    if (words.length >= 7) {\n      setIsWordInList(false);\n      setTimeout(() => {\n        setIsWordInList(true);\n      }, 2000);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [loaddingFive(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {\n        bg: \"light\",\n        expand: \"lg\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n            href: \"/home\",\n            children: \"Wordle !!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n            \"aria-controls\": \"basic-navbar-nav\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n            id: \"basic-navbar-nav\",\n            children: /*#__PURE__*/_jsxDEV(Nav, {\n              className: \"me-auto\",\n              children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n                href: \"/home\",\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n                href: \"/gameRule\",\n                children: \"Game Rules\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                  variant: \"success\",\n                  id: \"dropdown-basic\",\n                  children: \"Games\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                  children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                    href: \"/app\",\n                    children: \"easy game\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                    href: \"/app\",\n                    children: \"medium game\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                    href: \"/app\",\n                    children: \"hard game\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WordDisplayBar, {\n      name: currentWord\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Reminder, {\n      info: \"This is not in the List Please try again\",\n      display: isWordInList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this), console.log(solutionBoard), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"solutionTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emptyBoard\",\n        children: solutionBoard.map(item => /*#__PURE__*/_jsxDEV(AnswerBoard, {\n          boardArray: item,\n          array: null\n        }, uuidv4(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: wordsList.map(item => /*#__PURE__*/_jsxDEV(AnswerBoard, {\n          boardArray: null,\n          array: item\n        }, uuidv4(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }, this), console.log('picked: ' + picked), console.log('words: ' + words), console.log('curr: ' + currentWord), console.log('five: ' + fiveLetter[10]), console.log('boxlist: ' + wordsList), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wholeKeyboard\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"DeleteButton\",\n        onClick: () => handDelete(),\n        variant: \"success\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"SubmitButton\",\n        onClick: () => handSubmit(),\n        variant: \"success\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"Reset\",\n        onClick: () => handReset(),\n        variant: \"primary\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Keyboard, {\n        className: \"keyboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"p2Q2HtMZSetRMGYBA983eRyWFUE=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/fuencui/Desktop/worder/src/component/App.jsx"],"names":["React","useState","useEffect","Keyboard","Navbar","Container","NavDropdown","Nav","Dropdown","Button","shallowEqual","useSelector","useDispatch","WordDisplayBar","Reminder","AnswerBoard","v4","uuidv4","App","words","setWords","solutionBoard","setsolutionBoard","picked","setPicked","isWordInList","setIsWordInList","dispatch","currentWord","state","curr","fiveLetter","five","wordsList","list","w","Math","floor","random","length","i","array","j","push","char","color","handAnswer","word","console","log","type","value","loaddingFive","fetch","mode","then","response","text","data","trim","split","catch","error","handSubmit","isWordinList","checkResult","setTimeout","handDelete","substring","handReset","map","item"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css'\nimport Keyboard from './Keyboard';\nimport { Navbar, Container, NavDropdown, Nav, Dropdown, Button} from \"react-bootstrap\";\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport WordDisplayBar from './WordDisplayBar';\nimport Reminder from './Reminder';\nimport AnswerBoard from './AnswerBoard';\nimport { v4 as uuidv4 } from 'uuid';\n// import cookie from 'react-cookies';\n// import axios from 'axios';\n\n\nexport default function App() {\n    const[words, setWords] = useState([]);\n    const[solutionBoard, setsolutionBoard] = useState([]);\n    const[picked, setPicked] = useState('');\n    const[isWordInList, setIsWordInList] = useState(true);\n    const dispatch = useDispatch();\n\n    // const [ip, setIp] = useState('');\n\n    // const getData = async () => {\n    //     const res = await axios.get('https://geolocation-db.com/json/');\n    //     setIp(res.data.IPv4);\n    // }\n\n    const currentWord = useSelector((state) => {\n        return state.curr;\n    },shallowEqual);\n\n    const fiveLetter = useSelector((state) => {\n        return state.five;\n    },shallowEqual);\n\n    const wordsList = useSelector((state) => {\n        return state.list;\n    },shallowEqual);\n\n    \n\n    useEffect(() => { \n        const w = fiveLetter[Math.floor(Math.random() * fiveLetter.length)];\n        setPicked(w);\n\n        for (let i = 0; i < 7; i++){\n            if (solutionBoard.length >= 7) break;\n            let array = []\n            for (let j = 0; j < 5 ; j++){\n                array.push({\n                    char:' ',\n                    color:'white',\n                    })\n            }\n            solutionBoard.push(array)\n            setsolutionBoard([...solutionBoard])\n        }\n    }\n    ,[])\n\n\n\n    function handAnswer(word){\n        const array = [];\n        console.log(picked)\n        for (let i = 0; i < word.length; i++){\n            for (let j = i; j < word.length; j++){\n                if ((word[i] === picked[j]) && (i === j)){\n                    array.push({\n                        char:word[i],\n                        color:'green',\n                    })\n                    break;\n                } else if (word[i] === picked[j]){\n                    array.push({\n                        char:word[i],\n                        color:'yellow',\n                    })\n                    break;\n                }\n                if  (j === word.length - 1){\n                    array.push({\n                        char:word[i],\n                        color:'gray',\n                    })\n                    break;\n                }\n            }\n        }\n        \n        dispatch({\n            type: 'LIST',\n            value: array,\n        })\n\n    }\n\n\n    function loaddingFive() {\n        fetch('data.txt', {mode: 'no-cors'})\n        .then(response => response.text())\n        .then(data =>{\n                let array =  data.trim().split(\"\\n\")\n                dispatch({\n                    type: 'FIVE',\n                    value: array,\n                })\n            }\n        )\n        .catch(error => console.error(error));\n    }\n\n    function handSubmit(){\n        if (isWordinList(currentWord)){\n            words.push(currentWord)\n            setWords([...words],checkResult(currentWord)) \n            handAnswer(currentWord);\n        } else {\n            setIsWordInList(false);\n            setTimeout(() => { setIsWordInList(true);}, 2000)\n        }\n\n        dispatch(\n            {\n                type:'RESET',\n                value: '',\n            }\n        )\n    }\n\n\n    function handDelete(){\n        if (currentWord.length >= 0){\n            dispatch(\n                {\n                    type:'DEL',\n                    value: currentWord.substring(0, currentWord.length-1),\n                } \n            )\n        }\n    }\n\n    function isWordinList(word) {\n        if (word === '') return false;\n        for (let i = 0; i < fiveLetter.length; i++){\n            if (fiveLetter[i] === word){\n                return true;\n            }\n        }\n        return false;       \n    }\n\n    function handReset(){\n        setWords([]);\n        setsolutionBoard([]);\n        setPicked('');\n\n        dispatch(\n            {\n                type:'RESET',\n                value: '',\n            }\n        )\n        dispatch(\n            {\n                type:'ResetList',\n                value: '',\n            }\n        )\n        dispatch(\n            {\n                type:'ResetWord',\n                value: '',\n            }\n        )\n    }\n\n    function checkResult(word){\n        if(word === picked){\n            setIsWordInList(false);\n            setTimeout(() => { setIsWordInList(true);}, 2000)\n            setTimeout(() => { handReset()}, 3000)\n        }\n        if (words.length >= 7){\n            setIsWordInList(false);\n            setTimeout(() => { setIsWordInList(true);}, 2000)\n        }\n\n\n    }\n\n\n\n\n\n\n\n\n\n\n    return (   \n        <div className='App'> \n            {loaddingFive()}\n            <div className=\"navbar\">\n                <Navbar bg=\"light\" expand=\"lg\">\n                <Container>\n                    <Navbar.Brand href=\"/home\">Wordle !!!</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"me-auto\">\n                        <Nav.Link href=\"/home\">Home</Nav.Link>\n                        <Nav.Link href=\"/gameRule\">Game Rules</Nav.Link>\n                        <Dropdown>\n                            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                            Games\n                            </Dropdown.Toggle>\n\n                            <Dropdown.Menu>\n                            <Dropdown.Item href=\"/app\">easy game</Dropdown.Item>\n                            <Dropdown.Item href=\"/app\">medium game</Dropdown.Item>\n                            <Dropdown.Item href=\"/app\">hard game</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </Nav>\n                    </Navbar.Collapse>\n                </Container>\n                </Navbar>\n            </div>\n            < WordDisplayBar name={currentWord}/>\n            < Reminder info='This is not in the List Please try again' display={isWordInList}/>\n            {console.log(solutionBoard)}\n            <div className='solutionTable'>\n                <div className='emptyBoard'>\n                    {solutionBoard.map((item) => (\n                    <AnswerBoard boardArray={item} array={null} key={uuidv4()}/>\n                    ))}\n                </div>\n                <div>\n                    {wordsList.map((item) => (\n                        <AnswerBoard boardArray={null} array={item} key={uuidv4()}/>\n                    ))}\n                </div>\n            </div>\n             \n            {console.log('picked: '+ picked)}\n            {console.log('words: '+ words)}\n            {console.log('curr: ' + currentWord)}\n            {console.log('five: ' + fiveLetter[10])}\n            {console.log('boxlist: ' + wordsList)}\n            <div className='wholeKeyboard'>\n                <Button className='DeleteButton' onClick={() => handDelete()} variant=\"success\">Delete</Button>\n                <Button className='SubmitButton' onClick={() => handSubmit()} variant=\"success\">Submit</Button>\n                <Button className='Reset' onClick={() => handReset()} variant=\"primary\">Reset</Button>\n                <Keyboard className='keyboard'/>\n            </div>\n        </div>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}