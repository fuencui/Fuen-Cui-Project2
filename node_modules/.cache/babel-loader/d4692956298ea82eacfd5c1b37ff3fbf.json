{"ast":null,"code":"var _jsxFileName = \"/Users/fuencui/Desktop/Fuen-Cui-Project2/src/component/MediumGame.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Keyboard from './Keyboard';\nimport { Navbar, Container, NavDropdown, Nav, Dropdown, Button } from \"react-bootstrap\";\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport WordDisplayBar from './WordDisplayBar';\nimport Reminder from './Reminder';\nimport AnswerBoard from './AnswerBoard';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MediumGame() {\n  _s();\n\n  const [words, setWords] = useState([]);\n  const [solutionBoard, setsolutionBoard] = useState([]);\n  const [picked, setPicked] = useState('');\n  const [isReminderNotDisplay, setIsReminderNotDisplay] = useState(true);\n  const [info, SetInfo] = useState('');\n  const dispatch = useDispatch();\n  const currentMediumWord = useSelector(state => {\n    return state.currMed;\n  }, shallowEqual);\n  const mediumLetter = useSelector(state => {\n    return state.six;\n  }, shallowEqual);\n  const mediumWordsList = useSelector(state => {\n    return state.listMed;\n  }, shallowEqual);\n  const mediumGlobPicked = useSelector(state => {\n    return state.pickMed;\n  }, shallowEqual);\n  useEffect(() => {\n    let w = mediumLetter[Math.floor(Math.random() * mediumLetter.length)];\n\n    if (mediumWordsList.length !== 0) {\n      setPicked(mediumGlobPicked);\n    } else {\n      setPicked(w);\n      dispatch({\n        type: 'CHANGEMED',\n        value: w ? w : ''\n      });\n    }\n\n    for (let i = 0; i < 6; i++) {\n      if (solutionBoard.length >= 6) break;\n      let array = [];\n\n      for (let j = 0; j < 6; j++) {\n        array.push({\n          char: ' ',\n          color: 'white'\n        });\n      }\n\n      solutionBoard.push(array);\n      setsolutionBoard([...solutionBoard]);\n    }\n  }, [mediumLetter]);\n\n  function handAnswer(word) {\n    const array = [];\n    console.log(picked);\n\n    for (let i = 0; i < word.length; i++) {\n      for (let j = i; j < word.length; j++) {\n        if (word[i] === picked[j] && i === j) {\n          array.push({\n            char: word[i],\n            color: 'green'\n          });\n          break;\n        } else if (word[i] === picked[j]) {\n          array.push({\n            char: word[i],\n            color: 'yellow'\n          });\n          break;\n        }\n\n        if (j === word.length - 1) {\n          array.push({\n            char: word[i],\n            color: 'gray'\n          });\n          break;\n        }\n      }\n    }\n\n    dispatch({\n      type: 'LISTMED',\n      value: array\n    });\n  }\n\n  function loaddingSix() {\n    fetch('6-letter.txt', {\n      mode: 'no-cors'\n    }).then(response => response.text()).then(data => {\n      let array = data.trim().split(\" \");\n      const arrLower = array.map(element => {\n        return element.toLowerCase();\n      });\n      dispatch({\n        type: 'SIX',\n        value: arrLower\n      });\n    }).catch(error => console.error(error));\n  }\n\n  function handSubmit() {\n    if (isWordinList(currentMediumWord)) {\n      words.push(currentMediumWord);\n      setWords([...words], checkResult(currentMediumWord));\n      handAnswer(currentMediumWord);\n    }\n\n    dispatch({\n      type: 'RESETMED',\n      value: ''\n    });\n  }\n\n  function handDelete() {\n    if (currentMediumWord.length >= 0) {\n      dispatch({\n        type: 'DELMED',\n        value: currentMediumWord.substring(0, currentMediumWord.length - 1)\n      });\n    }\n  }\n\n  function isWordinList(word) {\n    if (word === '') return false;\n\n    for (let i = 0; i < mediumLetter.length; i++) {\n      if (mediumLetter[i] === word) {\n        return true;\n      }\n    }\n\n    SetInfo('Not in word list. Please try again');\n    setIsReminderNotDisplay(false);\n    setTimeout(() => {\n      setIsReminderNotDisplay(true);\n    }, 2000);\n    return false;\n  }\n\n  function handReset() {\n    setWords([]);\n    setsolutionBoard([]);\n    setPicked('');\n    dispatch({\n      type: 'RESETMED',\n      value: ''\n    });\n    dispatch({\n      type: 'ResetListMED',\n      value: ''\n    });\n    dispatch({\n      type: 'ResetWordMED',\n      value: ''\n    });\n  }\n\n  function checkResult(word) {\n    if (word === picked) {\n      SetInfo('Congratulations! The Word is ' + picked);\n      setIsReminderNotDisplay(false);\n      setTimeout(() => {\n        setIsReminderNotDisplay(true);\n      }, 2000);\n      setTimeout(() => {\n        handReset();\n      }, 3000);\n      return;\n    }\n\n    if (words.length >= 6) {\n      SetInfo('Game Over! The Word is ' + picked);\n      setIsReminderNotDisplay(false);\n      setTimeout(() => {\n        setIsReminderNotDisplay(true);\n      }, 2000);\n      setTimeout(() => {\n        handReset();\n      }, 3000);\n      return;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [loaddingSix(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {\n        bg: \"light\",\n        expand: \"lg\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n            href: \"/home\",\n            children: \"Fuen Cui Project 2 - Wordle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n            \"aria-controls\": \"basic-navbar-nav\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n            id: \"basic-navbar-nav\",\n            children: /*#__PURE__*/_jsxDEV(Nav, {\n              className: \"me-auto\",\n              children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n                href: \"/home\",\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n                href: \"/gameRule\",\n                children: \"Game Rules\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                  variant: \"success\",\n                  id: \"dropdown-basic\",\n                  children: \"Games\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                  children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                    href: \"/app\",\n                    children: \"easy game\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                    href: \"/mediumGame\",\n                    children: \"medium game\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                    href: \"/hardGame\",\n                    children: \"hard game\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WordDisplayBar, {\n      name: currentMediumWord\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Reminder, {\n      info: info,\n      display: isReminderNotDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this), console.log(solutionBoard), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"solutionTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emptyBoard\",\n        children: solutionBoard.map(item => /*#__PURE__*/_jsxDEV(AnswerBoard, {\n          boardArray: item,\n          array: null\n        }, uuidv4(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: mediumWordsList.map(item => /*#__PURE__*/_jsxDEV(AnswerBoard, {\n          boardArray: null,\n          array: item\n        }, uuidv4(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }, this), console.log('大小： ' + mediumLetter.length), console.log('picked: ' + picked), console.log('words: ' + words), console.log('curr: ' + currentMediumWord), console.log('five: ' + mediumLetter[10]), console.log('boxlist: ' + mediumWordsList), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wholeKeyboard\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"DeleteButton\",\n        onClick: () => handDelete(),\n        variant: \"success\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"SubmitButton\",\n        onClick: () => handSubmit(),\n        variant: \"success\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"Reset\",\n        onClick: () => handReset(),\n        variant: \"primary\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Keyboard, {\n        className: \"keyboard\",\n        type: \"ADDMED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MediumGame, \"BSvEbFLaKu7t5Tj6YF29Me2aCwQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = MediumGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"MediumGame\");","map":{"version":3,"sources":["/Users/fuencui/Desktop/Fuen-Cui-Project2/src/component/MediumGame.jsx"],"names":["React","useState","useEffect","Keyboard","Navbar","Container","NavDropdown","Nav","Dropdown","Button","shallowEqual","useSelector","useDispatch","WordDisplayBar","Reminder","AnswerBoard","v4","uuidv4","MediumGame","words","setWords","solutionBoard","setsolutionBoard","picked","setPicked","isReminderNotDisplay","setIsReminderNotDisplay","info","SetInfo","dispatch","currentMediumWord","state","currMed","mediumLetter","six","mediumWordsList","listMed","mediumGlobPicked","pickMed","w","Math","floor","random","length","type","value","i","array","j","push","char","color","handAnswer","word","console","log","loaddingSix","fetch","mode","then","response","text","data","trim","split","arrLower","map","element","toLowerCase","catch","error","handSubmit","isWordinList","checkResult","handDelete","substring","setTimeout","handReset","item"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css'\nimport Keyboard from './Keyboard';\nimport { Navbar, Container, NavDropdown, Nav, Dropdown, Button} from \"react-bootstrap\";\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport WordDisplayBar from './WordDisplayBar';\nimport Reminder from './Reminder';\nimport AnswerBoard from './AnswerBoard';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nexport default function MediumGame() {\n    const[words, setWords] = useState([]);\n    const[solutionBoard, setsolutionBoard] = useState([]);\n    const[picked, setPicked] = useState('');\n    const[isReminderNotDisplay, setIsReminderNotDisplay] = useState(true);\n    const[info, SetInfo] = useState('');\n    const dispatch = useDispatch();\n\n\n    const currentMediumWord = useSelector((state) => {\n        return state.currMed;\n    },shallowEqual);\n\n    const mediumLetter = useSelector((state) => {\n        return state.six;\n    },shallowEqual);\n\n    const mediumWordsList = useSelector((state) => {\n        return state.listMed;\n    },shallowEqual);\n\n    const mediumGlobPicked = useSelector((state) => {\n        return state.pickMed;\n    },shallowEqual);\n\n    useEffect(() => {\n        let w = mediumLetter[Math.floor(Math.random() * mediumLetter.length)]\n        if (mediumWordsList.length !== 0) {\n            setPicked(mediumGlobPicked);\n        } else {\n            setPicked(w);\n            dispatch({\n                type: 'CHANGEMED',\n                value: w ? w : '',\n            })\n        }\n\n        for (let i = 0; i < 6; i++){\n            if (solutionBoard.length >= 6) break;\n            let array = []\n            for (let j = 0; j < 6 ; j++){\n                array.push({\n                    char:' ',\n                    color:'white',\n                    })\n            }\n            solutionBoard.push(array)\n            setsolutionBoard([...solutionBoard])\n        }\n    }\n    ,[mediumLetter])\n\n\n\n    function handAnswer(word){\n        const array = [];\n        console.log(picked)\n        for (let i = 0; i < word.length; i++){\n            for (let j = i; j < word.length; j++){\n                if ((word[i] === picked[j]) && (i === j)){\n                    array.push({\n                        char:word[i],\n                        color:'green',\n                    })\n                    break;\n                } else if (word[i] === picked[j]){\n                    array.push({\n                        char:word[i],\n                        color:'yellow',\n                    })\n                    break;\n                }\n                if  (j === word.length - 1){\n                    array.push({\n                        char:word[i],\n                        color:'gray',\n                    })\n                    break;\n                }\n            }\n        }\n        \n        dispatch({\n            type: 'LISTMED',\n            value: array,\n        })\n\n    }\n\n\n    function loaddingSix() {\n        fetch('6-letter.txt', {mode: 'no-cors'})\n        .then(response => response.text())\n        .then(data =>{\n                let array =  data.trim().split(\" \");\n                const arrLower = array.map(element => {\n                    return element.toLowerCase();\n                });\n                dispatch({\n                    type: 'SIX',\n                    value: arrLower,\n                })\n            }\n        )\n        .catch(error => console.error(error));\n    }\n\n    function handSubmit(){\n        if (isWordinList(currentMediumWord)){\n            words.push(currentMediumWord)\n            setWords([...words],checkResult(currentMediumWord)) \n            handAnswer(currentMediumWord);\n        }\n\n        dispatch(\n            {\n                type:'RESETMED',\n                value: '',\n            }\n        )\n    }\n\n\n    function handDelete(){\n        if (currentMediumWord.length >= 0){\n            dispatch(\n                {\n                    type:'DELMED',\n                    value: currentMediumWord.substring(0, currentMediumWord.length-1),\n                } \n            )\n        }\n    }\n\n    function isWordinList(word) {\n        if (word === '') return false;\n        for (let i = 0; i < mediumLetter.length; i++){\n            if (mediumLetter[i] === word){\n                return true;\n            }\n        }\n        SetInfo('Not in word list. Please try again')\n        setIsReminderNotDisplay(false);\n        setTimeout(() => { setIsReminderNotDisplay(true);}, 2000)\n        return false;       \n    }\n\n    function handReset(){\n        setWords([]);\n        setsolutionBoard([]);\n        setPicked('');\n\n        dispatch(\n            {\n                type:'RESETMED',\n                value: '',\n            }\n        )\n        dispatch(\n            {\n                type:'ResetListMED',\n                value: '',\n            }\n        )\n        dispatch(\n            {\n                type:'ResetWordMED',\n                value: '',\n            }\n        )\n    }\n\n    function checkResult(word){\n        if(word === picked){\n            SetInfo('Congratulations! The Word is ' + picked);\n            setIsReminderNotDisplay(false);\n            setTimeout(() => { setIsReminderNotDisplay(true);}, 2000)\n            setTimeout(() => { handReset()}, 3000)\n            return;\n        }\n        if (words.length >= 6){\n            SetInfo('Game Over! The Word is ' + picked);\n            setIsReminderNotDisplay(false);\n            setTimeout(() => { setIsReminderNotDisplay(true);}, 2000)\n            setTimeout(() => { handReset()}, 3000)\n            return;\n        }\n    }\n\n    return (   \n        <div className='App'> \n            {loaddingSix()}\n            <div className=\"navbar\">\n                <Navbar bg=\"light\" expand=\"lg\">\n                <Container>\n                    <Navbar.Brand href=\"/home\">Fuen Cui Project 2 - Wordle</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"me-auto\">\n                        <Nav.Link href=\"/home\">Home</Nav.Link>\n                        <Nav.Link href=\"/gameRule\">Game Rules</Nav.Link>\n                        <Dropdown>\n                            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                            Games\n                            </Dropdown.Toggle>\n\n                            <Dropdown.Menu>\n                            <Dropdown.Item href=\"/app\">easy game</Dropdown.Item>\n                            <Dropdown.Item href=\"/mediumGame\">medium game</Dropdown.Item>\n                            <Dropdown.Item href=\"/hardGame\">hard game</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </Nav>\n                    </Navbar.Collapse>\n                </Container>\n                </Navbar>\n            </div>\n            < WordDisplayBar name={currentMediumWord}/>\n            < Reminder info={info} display={isReminderNotDisplay}/>\n            {console.log(solutionBoard)}\n            <div className='solutionTable'>\n                <div className='emptyBoard'>\n                    {solutionBoard.map((item) => (\n                    <AnswerBoard boardArray={item} array={null} key={uuidv4()}/>\n                    ))}\n                </div>\n                <div>\n                    {mediumWordsList.map((item) => (\n                        <AnswerBoard boardArray={null} array={item} key={uuidv4()}/>\n                    ))}\n                </div>\n            </div>\n            {console.log('大小： ' + mediumLetter.length)}\n            {console.log('picked: '+ picked)}\n            {console.log('words: '+ words)}\n            {console.log('curr: ' + currentMediumWord)}\n            {console.log('five: ' + mediumLetter[10])}\n            {console.log('boxlist: ' + mediumWordsList)}\n            <div className='wholeKeyboard'>\n                <Button className='DeleteButton' onClick={() => handDelete()} variant=\"success\">Delete</Button>\n                <Button className='SubmitButton' onClick={() => handSubmit()} variant=\"success\">Submit</Button>\n                <Button className='Reset' onClick={() => handReset()} variant=\"primary\">Reset</Button>\n                <Keyboard className='keyboard' type='ADDMED'/>\n            </div>\n        </div>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}